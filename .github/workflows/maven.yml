# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  validate:

    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Maven
        run: mvn spring-javaformat:apply -B validate --file pom.xml

  test:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Maven
        run: cd /tmp && wget https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz && sudo tar xvzf geckodriver-v0.26.0-linux64.tar.gz && sudo mv geckodriver /usr/local/bin/geckodriver && sudo chmod +x /usr/local/bin/geckodriver && geckodriver --version && whereis xvfb && xvfb :99 -ac -screen 0 1024x768x8 && export DISPLAY=":99" && cd /home/runner/work/ODB/ODB/ && mvn -B test --file pom.xml

  package:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml

    - name: Build artifact
      uses: actions/upload-artifact@v1
      with:
        name: spring-oculusdb.jar
        path: target/spring-oculusdb-2.2.0.BUILD-SNAPSHOT.jar
